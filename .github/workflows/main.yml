name: Java CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    environment: nahero-vps
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Run Tests on Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd ~/nahero/nahero-back
          
          git pull
          
          cd ../nahero-docker
          
          echo "NAHERO_TEST_DB=nahero_test_db" >> .env
          
          docker compose stop backend-tests nahero-test-db || true
          docker compose rm -f backend-tests nahero-test-db || true
          
          docker compose pull backend-tests nahero-test-db || true
          
          docker compose up -d nahero-test-db
          echo "Waiting for test database to be ready..."
          docker compose exec nahero-test-db bash -c 'until pg_isready -U ${NAHERO_DB_USER} -d ${NAHERO_TEST_DB}; do sleep 1; done'
          
          docker compose up --build --exit-code-from backend-tests backend-tests
          
          TEST_EXIT_CODE=$?
          
          docker compose stop backend-tests nahero-test-db
          docker compose rm -f backend-tests nahero-test-db
          
          exit $TEST_EXIT_CODE

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    environment: nahero-vps
    
    steps:
    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd ~/nahero/nahero-back
          
          git pull
          
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/nahero-backend:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nahero-backend:latest
          
          cd ../nahero-docker
          docker compose pull backend
          docker compose up -d --build backend
